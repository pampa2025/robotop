/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/gilberto_a_robot_arm1.glb -T -t -D 
Files: ./public/models/gilberto_a_robot_arm1.glb [585.86KB] > /Users/pampanie/dev/projects/3dworks/robot/robotop/gilberto_a_robot_arm1-transformed.glb [77.44KB] (87%)
*/

import * as THREE from 'three';
import React from 'react';
import { useGraph } from '@react-three/fiber';
import { useGLTF } from '@react-three/drei';
import { GLTF, SkeletonUtils } from 'three-stdlib';

type GLTFResult = GLTF & {
	nodes: {
		Object_56: THREE.SkinnedMesh;
		_rootJoint: THREE.Bone;
	};
	materials: {};
	animations: THREE.AnimationClip[];
};

export function RobotArm1(props: JSX.IntrinsicElements['group']) {
	const { scene } = useGLTF('models/gilberto_a_robot_arm1-transformed.glb');
	const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
	const { nodes, materials } = useGraph(clone) as GLTFResult;
	return (
		<group {...props} dispose={null}>
			<primitive object={nodes._rootJoint} />
			<skinnedMesh
				geometry={nodes.Object_56.geometry}
				material={nodes.Object_56.material}
				skeleton={nodes.Object_56.skeleton}
				scale={0.003}
			/>
		</group>
	);
}

useGLTF.preload('models/gilberto_a_robot_arm1-transformed.glb');
