/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/gilberto_a_robot_arm2.glb -T -t -D 
Files: ./public/models/gilberto_a_robot_arm2.glb [585.86KB] > /Users/pampanie/dev/projects/3dworks/robot/robotop/gilberto_a_robot_arm2-transformed.glb [77.44KB] (87%)
*/

import * as THREE from 'three';
import { useMemo, useEffect } from 'react';
import { useFrame, useGraph } from '@react-three/fiber';
import { useGLTF } from '@react-three/drei';
import { GLTF, SkeletonUtils } from 'three-stdlib';

type GLTFResult = GLTF & {
	nodes: {
		Object_Mesh: THREE.SkinnedMesh;
		_rootJoint: THREE.Bone;
	};
	materials: {};
	animations: THREE.AnimationClip[];
};

export function RobotArm(props: JSX.IntrinsicElements['group']) {
	const { scene } = useGLTF('models/gilberto_a_robot_arm2-transformed.glb');
	const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
	const { nodes, materials } = useGraph(clone) as GLTFResult;
	let testRotBoneName = 'J_Claw_Base_Rot_07';
	let testRotBone: THREE.Bone | undefined;

	useEffect(() => {
		const traverseBones = (bone: THREE.Bone) => {
			console.log('Bone name:', bone.name);
			// Check if the bone has rotation limits metadata
			if (bone.userData.rotationLimits) {
				console.log(
					'Rotation limits for',
					bone.name,
					':',
					bone.userData.rotationLimits
				);
				console.log('Current local rotation:', bone.rotation);
			}
			if (bone.name === testRotBoneName) {
				testRotBone = bone;
			}
			bone.children.forEach((child) => {
				if (child instanceof THREE.Bone) {
					traverseBones(child);
				}
			});
		};

		if (nodes._rootJoint) {
			traverseBones(nodes._rootJoint);
		}
	}, [nodes]);

	useFrame((state, delta) => {
		if (testRotBone) {
			testRotBone.rotateX(0.01);
		}
	});

	return (
		<group {...props} dispose={null} scale={[0.005, 0.005, 0.005]}>
			<primitive object={nodes._rootJoint} />
			<skinnedMesh
				geometry={nodes.Object_Mesh.geometry}
				material={nodes.Object_Mesh.material}
				skeleton={nodes.Object_Mesh.skeleton}
			/>
		</group>
	);
}

useGLTF.preload('models/gilberto_a_robot_arm2-transformed.glb');
